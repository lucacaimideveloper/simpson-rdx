{"ast":null,"code":"var _jsxFileName = \"/Users/lucacaimi/Desktop/The_Jump 2/ft3-git/simpsons-redux/src/components/Simposnos.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Characters from \"./Characters\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Simpsons = props => {\n  _s();\n  const simpsons = useSelector(state => state.simpsons); //import state\n  const dispatch = useDispatch();\n  //waiting for data api\n  if (!simpsons) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n  const {\n    getApiData\n  } = props;\n\n  //likecounter\n  let total = 0;\n  simpsons.forEach(character => {\n    if (character.liked) {\n      total += 1;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"total likes =\", total]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getApiData,\n        children: \"Get new data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"filter\",\n        children: \"Filter: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"filter\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"sort\",\n        children: \"Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"sort\",\n        onChange: () => {\n          dispatch({\n            type: \"SET_SORT_ORDER\",\n            payload: e.target.value\n          });\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"asc\",\n          children: \"ASC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"dsc\",\n          children: \"DSC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Characters, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Simpsons, \"miw9XhxcZhnRfHSWTl8OQ2WCJo8=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Simpsons;\nexport default Simpsons;\nvar _c;\n$RefreshReg$(_c, \"Simpsons\");","map":{"version":3,"names":["React","useSelector","useDispatch","Characters","jsxDEV","_jsxDEV","Fragment","_Fragment","Simpsons","props","_s","simpsons","state","dispatch","children","fileName","_jsxFileName","lineNumber","columnNumber","getApiData","total","forEach","character","liked","onClick","htmlFor","id","type","onChange","payload","e","target","value","_c","$RefreshReg$"],"sources":["/Users/lucacaimi/Desktop/The_Jump 2/ft3-git/simpsons-redux/src/components/Simposnos.jsx"],"sourcesContent":["import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Characters from \"./Characters\";\n\nconst Simpsons = (props) => {\n  const simpsons = useSelector((state) => state.simpsons); //import state\n  const dispatch = useDispatch();\n  //waiting for data api\n  if (!simpsons) {\n    return <p>Loading...</p>;\n  }\n  const { getApiData } = props;\n\n  //likecounter\n  let total = 0;\n  simpsons.forEach((character) => {\n    if (character.liked) {\n      total += 1;\n    }\n  });\n\n  return (\n    <>\n      <div>\n        {/* <select>\n          {characters.map((name) => {\n            return <option key={name.quote}>{name.character}</option>;\n          })}\n        </select> */}\n        <h3>total likes ={total}</h3>\n        <button onClick={getApiData}>Get new data</button>\n        <label htmlFor=\"filter\">Filter: </label>\n        <input id=\"filter\" type=\"text\" />\n\n        <label htmlFor=\"sort\">Sort</label>\n        <select\n          id=\"sort\"\n          onChange={() => {\n            dispatch({ type: \"SET_SORT_ORDER\", payload: e.target.value });\n          }}>\n          <option value=\"asc\">ASC</option>\n          <option value=\"dsc\">DSC</option>\n        </select>\n      </div>\n      <Characters />\n    </>\n  );\n};\n\nexport default Simpsons;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEtC,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC1B,MAAMC,QAAQ,GAAGV,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACD,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAME,QAAQ,GAAGX,WAAW,EAAE;EAC9B;EACA,IAAI,CAACS,QAAQ,EAAE;IACb,oBAAON,OAAA;MAAAS,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI;EAC1B;EACA,MAAM;IAAEC;EAAW,CAAC,GAAGV,KAAK;;EAE5B;EACA,IAAIW,KAAK,GAAG,CAAC;EACbT,QAAQ,CAACU,OAAO,CAAEC,SAAS,IAAK;IAC9B,IAAIA,SAAS,CAACC,KAAK,EAAE;MACnBH,KAAK,IAAI,CAAC;IACZ;EACF,CAAC,CAAC;EAEF,oBACEf,OAAA,CAAAE,SAAA;IAAAO,QAAA,gBACET,OAAA;MAAAS,QAAA,gBAMET,OAAA;QAAAS,QAAA,GAAI,eAAa,EAACM,KAAK;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eAC7Bb,OAAA;QAAQmB,OAAO,EAAEL,UAAW;QAAAL,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eAClDb,OAAA;QAAOoB,OAAO,EAAC,QAAQ;QAAAX,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACxCb,OAAA;QAAOqB,EAAE,EAAC,QAAQ;QAACC,IAAI,EAAC;MAAM;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAEjCb,OAAA;QAAOoB,OAAO,EAAC,MAAM;QAAAX,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eAClCb,OAAA;QACEqB,EAAE,EAAC,MAAM;QACTE,QAAQ,EAAEA,CAAA,KAAM;UACdf,QAAQ,CAAC;YAAEc,IAAI,EAAE,gBAAgB;YAAEE,OAAO,EAAEC,CAAC,CAACC,MAAM,CAACC;UAAM,CAAC,CAAC;QAC/D,CAAE;QAAAlB,QAAA,gBACFT,OAAA;UAAQ2B,KAAK,EAAC,KAAK;UAAAlB,QAAA,EAAC;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS,eAChCb,OAAA;UAAQ2B,KAAK,EAAC,KAAK;UAAAlB,QAAA,EAAC;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACzB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACL,eACNb,OAAA,CAACF,UAAU;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA,gBACb;AAEP,CAAC;AAACR,EAAA,CA3CIF,QAAQ;EAAA,QACKP,WAAW,EACXC,WAAW;AAAA;AAAA+B,EAAA,GAFxBzB,QAAQ;AA6Cd,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}