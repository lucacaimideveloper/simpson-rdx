{"ast":null,"code":"var _jsxFileName = \"/Users/lucacaimi/Desktop/The_Jump 2/ft3-git/simpsons-redux/src/components/Simposnos.jsx\",\n  _s = $RefreshSig$();\n//here is where our html and the mechanics connects\n//import them, add them in the props\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Characters from \"./Characters\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Simpsons = props => {\n  _s();\n  const simpsons = useSelector(state => state.simpsons); //import state\n  const sortOrder = useSelector(state => state.sortOrder);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const dispatch = useDispatch();\n\n  //waiting for data api\n  if (!simpsons) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  }\n  const {\n    getApiData\n  } = props;\n\n  //filter\n  const filtered = simpsons.filter(character => {\n    return character.character.toLowerCase().includes(searchTerm ? searchTerm.toLowerCase() : \"\");\n  });\n\n  //likecounter\n  let total = 0;\n  simpsons.forEach(character => {\n    if (character.liked) {\n      total += 1;\n    }\n  });\n  if (sortOrder && sortOrder === \"asc\") {\n    filtered.sort((item, nextItem) => {\n      if (item.character > nextItem.character) return 1;\n      if (item.character < nextItem.character) return -1;\n      return 0;\n    });\n  } else if (sortOrder) {\n    filtered.sort((item, nextItem) => {\n      if (item.character > nextItem.charcater) return -1;\n      if (item.character < nextItem.character) return 1;\n      return 0;\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"total likes =\", total]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getApiData,\n        children: \"Get new data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"filter\",\n        children: \"Filter: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"filter\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"sort\",\n        children: \"Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"sort\",\n        onChange: e => {\n          dispatch({\n            type: \"SET_SORT_ORDER\",\n            payload: e.target.value\n          });\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"asc\",\n          children: \"ASC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"dsc\",\n          children: \"DSC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Characters, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Simpsons, \"NONwWJyGurDQQ+yWOsdxbBFnqZk=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = Simpsons;\nexport default Simpsons;\nvar _c;\n$RefreshReg$(_c, \"Simpsons\");","map":{"version":3,"names":["React","useState","useSelector","useDispatch","Characters","jsxDEV","_jsxDEV","Fragment","_Fragment","Simpsons","props","_s","simpsons","state","sortOrder","searchTerm","setSearchTerm","dispatch","children","fileName","_jsxFileName","lineNumber","columnNumber","getApiData","filtered","filter","character","toLowerCase","includes","total","forEach","liked","sort","item","nextItem","charcater","onClick","htmlFor","id","type","onChange","e","payload","target","value","_c","$RefreshReg$"],"sources":["/Users/lucacaimi/Desktop/The_Jump 2/ft3-git/simpsons-redux/src/components/Simposnos.jsx"],"sourcesContent":["//here is where our html and the mechanics connects\n//import them, add them in the props\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Characters from \"./Characters\";\n\nconst Simpsons = (props) => {\n  const simpsons = useSelector((state) => state.simpsons); //import state\n  const sortOrder = useSelector((state) => state.sortOrder);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const dispatch = useDispatch();\n\n  //waiting for data api\n  if (!simpsons) {\n    return <p>Loading...</p>;\n  }\n  const { getApiData } = props;\n\n  //filter\n  const filtered = simpsons.filter((character) => {\n    return character.character\n      .toLowerCase()\n      .includes(searchTerm ? searchTerm.toLowerCase() : \"\");\n  });\n\n  //likecounter\n  let total = 0;\n  simpsons.forEach((character) => {\n    if (character.liked) {\n      total += 1;\n    }\n  });\n\n  if (sortOrder && sortOrder === \"asc\") {\n    filtered.sort((item, nextItem) => {\n      if (item.character > nextItem.character) return 1;\n      if (item.character < nextItem.character) return -1;\n      return 0;\n    });\n  } else if (sortOrder) {\n    filtered.sort((item, nextItem) => {\n      if (item.character > nextItem.charcater) return -1;\n      if (item.character < nextItem.character) return 1;\n      return 0;\n    });\n  }\n\n  return (\n    <>\n      <div>\n        {/* <select>\n          {characters.map((name) => {\n            return <option key={name.quote}>{name.character}</option>;\n          })}\n        </select> */}\n        <h3>total likes ={total}</h3>\n        <button onClick={getApiData}>Get new data</button>\n        <label htmlFor=\"filter\">Filter: </label>\n        <input id=\"filter\" type=\"text\" />\n\n        <label htmlFor=\"sort\">Sort</label>\n        <select\n          id=\"sort\"\n          onChange={(e) => {\n            dispatch({ type: \"SET_SORT_ORDER\", payload: e.target.value });\n          }}>\n          <option value=\"asc\">ASC</option>\n          <option value=\"dsc\">DSC</option>\n        </select>\n      </div>\n      <Characters />\n    </>\n  );\n};\n\nexport default Simpsons;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}